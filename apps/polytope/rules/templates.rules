# Copyright (c) 2013 Silke Horn
# http://solros.de/polymake/poly_database
# 
# This file is part of the polymake extension poly_database.
# 
# poly_database is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# poly_database is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with poly_database.  If not, see <http://www.gnu.org/licenses/>.


# @category Database Insertion
# Sets the template object for the collection //col// of the database //db//.
# 
# Contained in extension ''poly_database''.
# @param Core::Object obj
# @param String db database name
# @param String col collection name
# @option Bool local set to 1 if you want to use a local database (on localhost), default 0
# @option String username
# @option String password
user_function set_template_object($, $, $, {local => 0, username => "", password => ""}) {
	my ($obj, $db, $col, $options) = @_;
	my $local = $options->{local};
	my $u = $options->{username};
	my $p = $options->{password};

	my $client = get_client($local, $u, $p);
		
	my $tdb = $client->get_database($type_db);
	my $tcol = $tdb->get_collection("Types");

	$tcol->update({'db'=>$db, 'col'=>$col}, {'$set' => {'template' => pm2json($obj,"","",1)} });
}


# @category Database Insertion
# Sets the template object for the collection //col// of the database //db//.
# 
# Contained in extension ''poly_database''.
# @param String db database name
# @param String col collection name
# @option Bool local set to 1 if you want to use a local database (on localhost), default 0
# @return Core::Object
user_function get_template_object($, $, {local => 0}) {
	my ($db, $col, $options) = @_;
	my $local = $options->{local};
	
	my $client = get_client($local);
		
	my $tcol = $client->get_database($type_db)->get_collection("Types");

	my $doc = $tcol->find({db => $db, col => $col})->next;
	
	my $r = doc2object($doc->{'template'}, $doc);
	
	return $r;
}