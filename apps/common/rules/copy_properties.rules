# Copyright (c) 2013-2014 Silke Horn
# http://solros.de/polymake/poly_db
# 
# This file is part of the polymake extension polyDB.
# 
# polyDB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# polyDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with polyDB.  If not, see <http://www.gnu.org/licenses/>.



# @category Utilities
# Takes an [[Core::Object|Object]] //obj// and a template [[Core::Object|Object]] of the same type and computes or deletes properties so that they have (more or less) the same list of known properties.
# (This is just a quick and dirty solution for this until I make a fast and efficient one.)
# 
# There might be some problems since polymake does not allow deletion of non-redundant properties. This in particular poses a problem if //obj// was retrieved from a database.
# 
# Contained in extension ''polyDB''.
# @param Core::Object obj
# @param Core::Object template
# @option Bool nonew set to 1 if you don't want to compute missing properties
user_function copy_properties ($, $, {nonew => 0}) {
	my ($o, $t, $options) = @_;

	my $nonew = $options->{nonew};

	# TODO: check that $o and $t are of compatible types

	# TODO: attachments

	my @p = $t->list_properties;
#	my @ap = $t->list_attachments;
	
	unless ($nonew) {
		# compute missing properties (one by one)
		foreach($t->list_properties){
			my $s = $o->get_schedule($_);
			$s->apply($o);
			# TODO: subobjects!
		}
	}
	
	
	my @q = $o->list_properties;
	
	my $sp = new Set<String>(@p, "_id", "contributor", "date", "database", "collection", "version");		# properties of temp + db properties
	my $sq = new Set<String>(@q); 	# properties of o
	
	my $s = $sq-$sp;	# surplus properties that are to be removed
	
	foreach (@$s) {
		$o->remove($_, 1);
	}

}
