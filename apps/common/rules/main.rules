# Copyright (c) 2013-2016 Silke Horn, Andreas Paffenholz
# http://solros.de/polymake/poly_db
# http://www.mathematik.tu-darmstadt.de/~paffenholz
# 
# This file is part of the polymake extension polyDB.
# 
# polyDB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# polyDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with polyDB.  If not, see <http://www.gnu.org/licenses/>.




use PolyDB;
use MongoDB;
use MongoDB::OID;


# A database cursor. Initialize it with a [[DATABASE]] name, a [[COLLECTION]] name and a [[QUERY]]. You can then iterate over the objects matching the [[QUERY]] with [[next]]. It lazily fetches more objects from the database server. (Note that you have to create a new cursor if you want to start from the beginning.)
declare object DatabaseCursor;


# @topic category functions/Database
# Here you can find the functions to access the polymake database.

# @topic category functions/Database Admin
# These are administrative functions. You need admin access to the database for these.
# 
# This category also contains functions that I want to hide from the public because they are not yet completely presentable.


# @topic category functions/Database Write Access
# These are the functions to insert and update objects. You need write access to the database for these. 




INCLUDE
	templates.rules        # done
	db.rules               # done
	info.rules             # done
	db_insert.rules        # partially done
	admin.rules            # check
	cursor.rules


#	db_update_client.rules # check
